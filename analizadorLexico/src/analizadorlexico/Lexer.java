/* The following code was generated by JFlex 1.4.3 on 24/08/19 03:20 PM */

package analizadorlexico;
import static analizadorlexico.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 24/08/19 03:20 PM from the specification file
 * <tt>C:/Users/garya/Desktop/analizadorLexico/src/analizadorlexico/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\41\2\0\1\4\22\0\1\4\1\50\1\0\1\64"+
    "\1\0\1\45\1\51\1\67\1\57\1\60\1\44\1\43\1\4\1\37"+
    "\1\54\1\40\1\66\1\65\1\3\1\3\1\3\1\3\1\3\1\3"+
    "\1\3\1\3\1\0\1\53\1\46\1\42\1\47\1\0\1\63\1\5"+
    "\1\24\1\16\1\6\1\11\1\34\1\27\1\20\1\22\1\36\1\25"+
    "\1\7\1\31\1\13\1\21\1\26\1\2\1\12\1\15\1\10\1\17"+
    "\1\32\1\30\1\35\1\14\1\23\1\55\1\0\1\56\1\0\1\33"+
    "\1\0\32\1\1\61\1\52\1\62\uff82\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\26\2\1\5\2\2"+
    "\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\1\1\1\20\1\21\1\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\2\2\1\35\2\2\1\35\24\2\1\35\17\2\1\35"+
    "\30\2\2\35\4\2\1\35\1\2\2\35\24\2\1\35"+
    "\22\2\1\4\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\0\1\45\1\46\1\47\1\0\1\35\11\2"+
    "\1\35\30\2\1\35\30\2\1\35\2\2\1\35\34\2"+
    "\1\35\10\2\1\35\2\2\1\35\14\2\1\35\22\2"+
    "\1\35\7\2\1\35\2\2\2\0\10\2\1\35\13\2"+
    "\1\35\4\2\1\35\1\2\1\0\6\2\1\35\16\2"+
    "\1\35\27\2\1\35\17\2\2\35\20\2\1\35\5\2"+
    "\1\35\5\2\1\3\1\34\13\2\1\35\6\2\1\0"+
    "\36\2\1\35\35\2\1\35\13\2\1\0\1\35\45\2"+
    "\1\0\4\2\1\35\3\2\1\35\1\2\1\35\16\2"+
    "\1\35\7\2\1\35\3\2\1\35\32\2\1\35\21\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[666];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\70\0\160\0\250\0\340\0\u0118\0\u0150\0\u0188"+
    "\0\u01c0\0\u01f8\0\u0230\0\u0268\0\u02a0\0\u02d8\0\u0310\0\u0348"+
    "\0\u0380\0\u03b8\0\u03f0\0\u0428\0\u0460\0\u0498\0\u04d0\0\u0508"+
    "\0\u0540\0\u0578\0\u05b0\0\160\0\u05e8\0\u0620\0\70\0\u0658"+
    "\0\u0690\0\70\0\70\0\70\0\u06c8\0\u0700\0\u0738\0\u0770"+
    "\0\u07a8\0\70\0\70\0\u07e0\0\70\0\u0818\0\70\0\u0850"+
    "\0\70\0\70\0\u0888\0\250\0\u08c0\0\u08f8\0\u0930\0\u0968"+
    "\0\160\0\u09a0\0\u09d8\0\u0a10\0\u0a48\0\u0a80\0\u0ab8\0\u0af0"+
    "\0\u0b28\0\u0b60\0\u0b98\0\u0bd0\0\u0c08\0\u0c40\0\u0c78\0\u0cb0"+
    "\0\u0ce8\0\u0d20\0\u0d58\0\u0d90\0\u0dc8\0\u0e00\0\u0e38\0\u0e70"+
    "\0\u0ea8\0\u0ee0\0\u0f18\0\u0f50\0\u0f88\0\u0fc0\0\u0ff8\0\u1030"+
    "\0\u1068\0\u10a0\0\u10d8\0\u1110\0\u1148\0\u1180\0\u11b8\0\u11f0"+
    "\0\u1228\0\u1260\0\u1298\0\u12d0\0\u1308\0\u1340\0\u1378\0\u13b0"+
    "\0\u13e8\0\u1420\0\u1458\0\u1490\0\u14c8\0\u1500\0\u1538\0\u1570"+
    "\0\u15a8\0\u15e0\0\u1618\0\u1650\0\u1688\0\u16c0\0\u16f8\0\u1730"+
    "\0\u1768\0\u17a0\0\u17d8\0\u1810\0\u1848\0\u1880\0\u18b8\0\u18f0"+
    "\0\u1928\0\u1960\0\u1998\0\u19d0\0\u1a08\0\u1a40\0\u1a78\0\u1ab0"+
    "\0\u1ae8\0\u1b20\0\u1b58\0\u1b90\0\u1bc8\0\u1c00\0\u1c38\0\u1c70"+
    "\0\u1ca8\0\u1ce0\0\u1d18\0\u1d50\0\u1d88\0\u1dc0\0\u1df8\0\u1e30"+
    "\0\u1e68\0\u1ea0\0\u1ed8\0\u1f10\0\u1f48\0\u1f80\0\u1fb8\0\u1ff0"+
    "\0\u2028\0\u2060\0\u2098\0\u20d0\0\u2108\0\u2140\0\u2178\0\u21b0"+
    "\0\u21e8\0\u2220\0\u2258\0\70\0\70\0\70\0\70\0\70"+
    "\0\70\0\70\0\u2290\0\70\0\70\0\70\0\u22c8\0\u2300"+
    "\0\u2338\0\u2370\0\u23a8\0\u23e0\0\u2418\0\u2450\0\u2488\0\u24c0"+
    "\0\u24f8\0\u2530\0\u2568\0\u0ea8\0\u25a0\0\u25d8\0\u2610\0\u2648"+
    "\0\u2680\0\u26b8\0\u26f0\0\u2728\0\u2760\0\u2798\0\u27d0\0\u2808"+
    "\0\u2840\0\u2878\0\u28b0\0\u28e8\0\u2920\0\u2958\0\u2990\0\u29c8"+
    "\0\u2a00\0\u2a38\0\u2a70\0\u2aa8\0\u2ae0\0\u2b18\0\u2b50\0\u2b88"+
    "\0\u2bc0\0\u2bf8\0\u2c30\0\u2c68\0\u2ca0\0\u2cd8\0\u2d10\0\u2d48"+
    "\0\u2d80\0\u2db8\0\u2df0\0\u2e28\0\u2e60\0\u2e98\0\u2ed0\0\u2f08"+
    "\0\u2f40\0\u2f78\0\u2fb0\0\u2fe8\0\u3020\0\u3058\0\u3090\0\u30c8"+
    "\0\u3100\0\u3138\0\u3170\0\u31a8\0\u31e0\0\u3218\0\u3250\0\u3288"+
    "\0\u32c0\0\u32f8\0\u3330\0\u3368\0\u33a0\0\u33d8\0\u3410\0\u3448"+
    "\0\u3480\0\u34b8\0\u34f0\0\u3528\0\u3560\0\u3598\0\u35d0\0\u3608"+
    "\0\u3640\0\u3678\0\u36b0\0\u2fb0\0\u36e8\0\u3720\0\u3758\0\u3790"+
    "\0\u37c8\0\u3800\0\u3838\0\u3870\0\u38a8\0\u38e0\0\u3918\0\u3950"+
    "\0\u3988\0\u39c0\0\u39f8\0\u3a30\0\u3a68\0\u3aa0\0\u3ad8\0\u3b10"+
    "\0\u3b48\0\u3b80\0\u3bb8\0\u3bf0\0\u3c28\0\u3c60\0\u3c98\0\u3cd0"+
    "\0\u3d08\0\u3d40\0\u3d78\0\u3db0\0\u3de8\0\u3e20\0\u3e58\0\u3e90"+
    "\0\u3ec8\0\u3f00\0\u3f38\0\u3f70\0\u3fa8\0\u3fe0\0\u4018\0\u4050"+
    "\0\u4088\0\u40c0\0\u40f8\0\u4130\0\u4168\0\u41a0\0\u41d8\0\u4210"+
    "\0\u4248\0\u4280\0\u42b8\0\u42f0\0\u4328\0\u4360\0\u4398\0\u43d0"+
    "\0\u4408\0\u4440\0\u4478\0\u44b0\0\u44e8\0\u4520\0\u4558\0\u4590"+
    "\0\u45c8\0\u4600\0\u4638\0\u4670\0\u46a8\0\u46e0\0\u4718\0\u4750"+
    "\0\u4788\0\u47c0\0\u47f8\0\u4830\0\u4868\0\u48a0\0\u48d8\0\u4910"+
    "\0\u4948\0\u4980\0\u49b8\0\u49f0\0\u4a28\0\u4a60\0\u4a98\0\u4ad0"+
    "\0\u4b08\0\u4b40\0\u4b78\0\u4bb0\0\u4be8\0\u4c20\0\u4c58\0\u4c90"+
    "\0\u4cc8\0\u4d00\0\u4d38\0\u4d70\0\u4da8\0\u4de0\0\u4e18\0\u4e50"+
    "\0\u4e88\0\u4ec0\0\u4ef8\0\u4f30\0\u4f68\0\u4fa0\0\u4fd8\0\u5010"+
    "\0\u5048\0\u5080\0\u50b8\0\u50f0\0\u5128\0\u5160\0\u5198\0\u51d0"+
    "\0\u5208\0\u5240\0\u5278\0\u52b0\0\u52e8\0\u5320\0\u5358\0\u5390"+
    "\0\u53c8\0\u5400\0\u5438\0\u5470\0\u54a8\0\u54e0\0\u5518\0\u4050"+
    "\0\u5550\0\u5588\0\u55c0\0\u55f8\0\u5630\0\u5668\0\u56a0\0\u56d8"+
    "\0\u5710\0\u5748\0\u5780\0\u57b8\0\u57f0\0\u5828\0\u5860\0\u5898"+
    "\0\u58d0\0\u5908\0\u5940\0\u5978\0\u59b0\0\u59e8\0\u5a20\0\u5a58"+
    "\0\u5a90\0\u5ac8\0\u5b00\0\u5b38\0\u5b70\0\u5ba8\0\u5be0\0\u5c18"+
    "\0\u5c50\0\u5c88\0\u5cc0\0\70\0\u5cf8\0\u5d30\0\u5d68\0\u2300"+
    "\0\u5da0\0\u5dd8\0\u5e10\0\u5e48\0\u5e80\0\u5eb8\0\u5ef0\0\u5f28"+
    "\0\u5f60\0\u5f98\0\u5fd0\0\u6008\0\u6040\0\u6078\0\u60b0\0\u60e8"+
    "\0\u6120\0\u6158\0\u6190\0\u61c8\0\u6200\0\u6238\0\u6270\0\u62a8"+
    "\0\u62e0\0\u6318\0\u6350\0\u6388\0\u63c0\0\u63f8\0\u6430\0\u6468"+
    "\0\u64a0\0\u64d8\0\u6510\0\u6548\0\u6580\0\u65b8\0\u65f0\0\u6628"+
    "\0\u6660\0\u6698\0\u66d0\0\u6708\0\u6740\0\u6778\0\u67b0\0\u67e8"+
    "\0\u6820\0\u6858\0\u6890\0\u68c8\0\u6900\0\u6938\0\u6970\0\u69a8"+
    "\0\u3c28\0\u69e0\0\u6a18\0\u6a50\0\u6a88\0\u6ac0\0\u6af8\0\u6b30"+
    "\0\u6b68\0\u6ba0\0\u6bd8\0\u6c10\0\u6c48\0\u6c80\0\u6cb8\0\u6cf0"+
    "\0\u6d28\0\u6d60\0\u6d98\0\u6dd0\0\u4da8\0\u6e08\0\u6e40\0\u6e78"+
    "\0\u6eb0\0\u6ee8\0\u6f20\0\u6f58\0\u6f90\0\u6fc8\0\u7000\0\u7038"+
    "\0\u7070\0\u23a8\0\u70a8\0\u70e0\0\u7118\0\u7150\0\u7188\0\u71c0"+
    "\0\u71f8\0\u7230\0\u7268\0\u72a0\0\u72d8\0\u7310\0\u7348\0\u7380"+
    "\0\u73b8\0\u73f0\0\u7428\0\u7460\0\u7498\0\u74d0\0\u7508\0\u7540"+
    "\0\u7578\0\u75b0\0\u75e8\0\u7620\0\u7658\0\u7690\0\u76c8\0\u7700"+
    "\0\u7738\0\u7770\0\u77a8\0\u77e0\0\u7818\0\u7850\0\u7888\0\u78c0"+
    "\0\u78f8\0\u7930\0\u7968\0\u79a0\0\u72a0\0\u79d8\0\u7a10\0\u3090"+
    "\0\u2760\0\u7a48\0\u7a80\0\u7ab8\0\u7af0\0\u7b28\0\u7b60\0\u7b98"+
    "\0\u7bd0\0\u7c08\0\u17d8\0\u7c40\0\u7c78\0\u7cb0\0\u7ce8\0\u7d20"+
    "\0\u7d58\0\70\0\u7d90\0\u7dc8\0\u7e00\0\u7e38\0\u7e70\0\u7ea8"+
    "\0\u7ee0\0\u7f18\0\u7f50\0\u7f88\0\u7fc0\0\u7ff8\0\u8030\0\u8068"+
    "\0\u80a0\0\u80d8\0\u8110\0\u8148\0\u8180\0\u81b8\0\u81f0\0\u8228"+
    "\0\u8260\0\u8298\0\u82d0\0\u8308\0\u8340\0\u8378\0\u83b0\0\u83e8"+
    "\0\u8420\0\u8458\0\u8490\0\u84c8\0\u8500\0\u8538\0\u8570\0\u85a8"+
    "\0\u85e0\0\u8618\0\u8650\0\u8688\0\u86c0\0\u86f8\0\u8730\0\u8768"+
    "\0\u87a0\0\u87d8\0\u7f18\0\u8810\0\u8848\0\u8880\0\u88b8\0\u88f0"+
    "\0\u8928\0\u8960";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[666];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\3\1\36\1\37\1\40"+
    "\1\5\1\41\1\42\1\43\1\44\1\45\1\46\1\47"+
    "\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57"+
    "\1\60\1\61\1\62\1\63\2\64\1\65\71\0\3\3"+
    "\1\0\32\3\26\0\2\3\4\0\1\4\50\0\1\66"+
    "\10\0\2\4\5\0\1\5\34\0\1\5\27\0\3\3"+
    "\1\0\1\3\1\67\1\70\1\71\1\3\1\72\1\73"+
    "\1\3\1\74\1\75\1\76\4\3\1\77\5\3\1\100"+
    "\4\3\26\0\2\3\2\0\3\3\1\0\1\101\3\3"+
    "\1\102\1\103\4\3\1\104\1\3\1\105\1\106\1\3"+
    "\1\107\12\3\26\0\2\3\2\0\3\3\1\0\1\110"+
    "\3\3\1\111\7\3\1\112\1\113\14\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\114\3\3\1\115\1\116\2\3"+
    "\1\117\2\3\1\120\1\121\1\122\14\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\123\2\3\1\124\1\125"+
    "\1\3\1\126\17\3\1\127\1\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\130\3\3\1\131\5\3\1\132\1\3"+
    "\1\133\1\134\14\3\26\0\2\3\2\0\3\3\1\0"+
    "\1\135\3\3\1\136\4\3\1\137\1\140\1\3\1\141"+
    "\15\3\26\0\2\3\2\0\3\3\1\0\4\3\1\142"+
    "\25\3\26\0\2\3\2\0\1\3\1\143\1\3\1\0"+
    "\1\144\2\3\1\145\1\146\2\3\1\147\1\3\1\150"+
    "\1\151\1\152\1\153\1\154\3\3\1\155\2\3\1\156"+
    "\5\3\26\0\2\3\2\0\3\3\1\0\1\157\1\3"+
    "\1\160\2\3\1\161\4\3\1\162\1\163\1\164\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\6\3\1\165\1\3"+
    "\1\166\10\3\1\167\10\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\170\13\3\1\171\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\172\1\173\2\3\1\174\1\175"+
    "\6\3\1\176\3\3\1\177\1\3\1\200\2\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\3\1\201\4\3\1\202"+
    "\1\3\1\203\13\3\1\204\2\3\1\71\2\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\205\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\206\3\3\1\207\1\210"+
    "\1\3\1\71\2\3\1\211\1\3\1\212\1\213\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\214\10\3"+
    "\1\215\14\3\26\0\2\3\2\0\3\3\1\0\1\216"+
    "\1\3\1\217\1\3\1\220\1\221\4\3\1\222\1\3"+
    "\1\223\1\224\14\3\26\0\2\3\2\0\3\3\1\0"+
    "\2\3\1\225\1\3\1\226\1\227\6\3\1\230\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\231\4\3\1\232"+
    "\5\3\1\233\1\234\1\212\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\235\3\3\1\236\7\3\1\237\1\240"+
    "\14\3\26\0\2\3\2\0\3\3\1\0\1\241\14\3"+
    "\1\242\14\3\26\0\2\3\2\0\3\3\1\0\1\243"+
    "\1\3\1\244\1\3\1\245\1\246\4\3\1\247\1\3"+
    "\1\250\1\251\14\3\26\0\2\3\2\0\3\3\1\0"+
    "\14\3\1\252\15\3\26\0\2\3\41\0\1\253\3\0"+
    "\1\253\65\0\1\254\67\0\1\255\67\0\1\256\67\0"+
    "\1\257\76\0\1\260\70\0\1\261\73\0\1\262\50\0"+
    "\1\263\20\0\1\264\71\0\1\265\71\0\1\266\3\0"+
    "\41\65\1\0\26\65\3\0\1\66\5\0\1\267\53\0"+
    "\2\66\2\0\3\3\1\0\2\71\30\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\270\1\271\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\71\25\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\3\1\71\5\3\1\71"+
    "\22\3\26\0\2\3\2\0\3\3\1\0\10\3\1\272"+
    "\1\71\20\3\26\0\2\3\2\0\3\3\1\0\3\3"+
    "\1\273\26\3\26\0\2\3\2\0\3\3\1\0\3\3"+
    "\1\274\26\3\26\0\2\3\2\0\3\3\1\0\10\3"+
    "\1\275\21\3\26\0\2\3\2\0\3\3\1\0\22\3"+
    "\1\71\7\3\26\0\2\3\2\0\3\3\1\0\3\3"+
    "\1\276\3\3\1\71\22\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\277\1\3\1\300\3\3\1\214\1\3\1\301"+
    "\1\302\15\3\1\303\2\3\26\0\2\3\2\0\3\3"+
    "\1\0\14\3\1\304\15\3\26\0\2\3\2\0\3\3"+
    "\1\0\24\3\1\304\5\3\26\0\2\3\2\0\3\3"+
    "\1\0\12\3\1\305\11\3\1\306\5\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\307\7\3\1\310\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\11\3\1\311\20\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\226\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\312\5\3\1\313\16\3"+
    "\1\314\1\3\1\226\2\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\315\10\3\1\316\11\3\1\271\6\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\317\11\3\1\72"+
    "\11\3\26\0\2\3\2\0\3\3\1\0\17\3\1\320"+
    "\12\3\26\0\2\3\2\0\3\3\1\0\24\3\1\321"+
    "\3\3\1\322\1\3\26\0\2\3\2\0\3\3\1\0"+
    "\1\323\6\3\1\324\2\3\1\325\2\3\1\326\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\327\25\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\330\25\3"+
    "\26\0\2\3\2\0\3\3\1\0\21\3\1\71\10\3"+
    "\26\0\2\3\2\0\3\3\1\0\24\3\1\331\5\3"+
    "\26\0\2\3\2\0\3\3\1\0\10\3\1\72\21\3"+
    "\26\0\2\3\2\0\3\3\1\0\5\3\1\332\24\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\3\1\333\30\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\334\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\335\1\336"+
    "\4\3\1\337\3\3\1\340\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\341\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\342\1\3\1\343\1\344\4\3\1\345"+
    "\1\346\7\3\1\347\3\3\1\350\1\3\1\351\2\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\72\27\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\352\20\3"+
    "\1\353\6\3\26\0\2\3\2\0\3\3\1\0\22\3"+
    "\1\354\7\3\26\0\2\3\2\0\3\3\1\0\3\3"+
    "\1\355\20\3\1\356\5\3\26\0\2\3\2\0\3\3"+
    "\1\0\30\3\1\226\1\3\26\0\2\3\2\0\3\3"+
    "\1\0\13\3\1\142\16\3\26\0\2\3\2\0\3\3"+
    "\1\0\2\3\1\357\21\3\1\360\5\3\26\0\2\3"+
    "\2\0\3\3\1\0\3\3\1\71\2\3\1\361\2\3"+
    "\1\362\20\3\26\0\2\3\2\0\3\3\1\0\1\363"+
    "\31\3\26\0\2\3\2\0\3\3\1\0\2\3\1\364"+
    "\27\3\26\0\2\3\2\0\3\3\1\0\25\3\1\72"+
    "\4\3\26\0\2\3\2\0\3\3\1\0\1\365\31\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\366\1\367"+
    "\4\3\1\370\1\371\12\3\1\372\5\3\26\0\2\3"+
    "\2\0\3\3\1\0\10\3\1\373\21\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\374\5\3\1\375\16\3"+
    "\26\0\2\3\2\0\3\3\1\0\17\3\1\376\4\3"+
    "\1\71\5\3\26\0\2\3\2\0\3\3\1\0\12\3"+
    "\1\377\17\3\26\0\2\3\2\0\3\3\1\0\24\3"+
    "\1\72\5\3\26\0\2\3\2\0\3\3\1\0\16\3"+
    "\1\72\13\3\26\0\2\3\2\0\3\3\1\0\1\u0100"+
    "\31\3\26\0\2\3\2\0\3\3\1\0\1\u0101\31\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\u0102\4\3"+
    "\1\u0103\21\3\26\0\2\3\2\0\3\3\1\0\12\3"+
    "\1\u0104\1\3\1\123\15\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u0105\7\3\1\u0106\15\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\u0107\24\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u0108\3\3\1\u0109\25\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u010a\1\3\1\u010b\2\3"+
    "\1\u010c\1\u010d\3\3\1\u010e\11\3\1\u010f\5\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u0110\2\3\1\u0111"+
    "\1\u0112\10\3\26\0\2\3\2\0\3\3\1\0\1\u0113"+
    "\3\3\1\u0114\10\3\1\u0115\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\3\1\u0116\17\3\1\271\10\3\26\0"+
    "\2\3\2\0\3\3\1\0\25\3\1\u0117\4\3\26\0"+
    "\2\3\2\0\3\3\1\0\2\3\1\u0118\7\3\1\363"+
    "\17\3\26\0\2\3\2\0\3\3\1\0\1\3\1\271"+
    "\30\3\26\0\2\3\2\0\3\3\1\0\2\3\1\214"+
    "\27\3\26\0\2\3\2\0\3\3\1\0\3\3\1\u0119"+
    "\26\3\26\0\2\3\2\0\3\3\1\0\3\3\1\u011a"+
    "\26\3\26\0\2\3\2\0\3\3\1\0\3\3\1\273"+
    "\1\u011b\25\3\26\0\2\3\2\0\3\3\1\0\4\3"+
    "\1\u011c\25\3\26\0\2\3\2\0\3\3\1\0\27\3"+
    "\1\u011d\2\3\26\0\2\3\2\0\3\3\1\0\4\3"+
    "\1\u011e\25\3\26\0\2\3\2\0\3\3\1\0\1\3"+
    "\1\u011f\1\3\1\u0120\2\3\1\271\1\3\1\u0121\1\u0122"+
    "\3\3\1\u0123\3\3\1\u0124\10\3\26\0\2\3\2\0"+
    "\3\3\1\0\14\3\1\u0125\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\24\3\1\u0126\5\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\72\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\11\3\1\u0127\20\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u0128\16\3\1\252\7\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\u0129\7\3\1\u012a"+
    "\15\3\26\0\2\3\2\0\3\3\1\0\2\3\1\u012b"+
    "\27\3\26\0\2\3\2\0\3\3\1\0\3\3\1\u012c"+
    "\26\3\26\0\2\3\2\0\3\3\1\0\3\3\1\u012d"+
    "\26\3\26\0\2\3\2\0\3\3\1\0\7\3\1\71"+
    "\22\3\26\0\2\3\2\0\3\3\1\0\2\3\1\u012e"+
    "\27\3\26\0\2\3\2\0\3\3\1\0\1\3\1\71"+
    "\3\3\1\u012f\2\3\1\u0130\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\330\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\5\3\1\u0131\24\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u0132\7\3\1\u0133\1\u0134\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\17\3\1\u0135\12\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\u0136\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\25\3\1\u0137\4\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u0138\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\71\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u010e\13\3\1\u0139\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\u013a\26\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u013b\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u013c\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\u013d\10\3"+
    "\1\132\14\3\26\0\2\3\2\0\3\3\1\0\5\3"+
    "\1\u012b\24\3\26\0\2\3\2\0\3\3\1\0\3\3"+
    "\1\u013e\24\3\1\71\1\3\26\0\2\3\2\0\3\3"+
    "\1\0\5\3\1\u0113\24\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\3\1\u013f\4\3\1\212\23\3\26\0\2\3"+
    "\2\0\3\3\1\0\6\3\1\u0140\23\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\u0141\2\3\1\u0142\24\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\u0143\25\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\123\27\3"+
    "\26\0\2\3\2\0\3\3\1\0\14\3\1\u0144\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\u013e\26\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\u0145\7\3"+
    "\1\u0146\15\3\26\0\2\3\2\0\3\3\1\0\2\3"+
    "\1\u012e\3\3\1\u0147\23\3\26\0\2\3\2\0\3\3"+
    "\1\0\5\3\1\u0148\4\3\1\u0149\17\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\u014a\2\3\1\110\24\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\330\14\3"+
    "\26\0\2\3\1\0\41\253\1\0\26\253\3\0\1\u014b"+
    "\61\0\2\u014b\44\0\1\u014c\25\0\3\3\1\0\14\3"+
    "\1\u014d\15\3\26\0\2\3\2\0\3\3\1\0\4\3"+
    "\1\363\25\3\26\0\2\3\2\0\3\3\1\0\4\3"+
    "\1\u014e\25\3\26\0\2\3\2\0\3\3\1\0\15\3"+
    "\1\u014f\14\3\26\0\2\3\2\0\3\3\1\0\13\3"+
    "\1\u0150\16\3\26\0\2\3\2\0\3\3\1\0\14\3"+
    "\1\u0151\15\3\26\0\2\3\2\0\3\3\1\0\1\u0152"+
    "\3\3\1\71\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\2\3\1\u0153\27\3\26\0\2\3\2\0\3\3\1\0"+
    "\4\3\1\u0154\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\11\3\1\u0155\20\3\26\0\2\3\2\0\3\3\1\0"+
    "\2\3\1\u0156\12\3\1\u0157\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\u0158\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\17\3\1\132\12\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\252\31\3\26\0\2\3\2\0\3\3\1\0"+
    "\22\3\1\u0159\7\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\u015a\5\3\1\u015b\6\3\1\71\11\3\26\0"+
    "\2\3\2\0\3\3\1\0\11\3\1\71\20\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\3\1\u0117\30\3\26\0"+
    "\2\3\2\0\3\3\1\0\22\3\1\u015c\7\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\u012e\25\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\3\1\71\30\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u012e\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\4\3\1\u015d\25\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\u015e\27\3\26\0\2\3"+
    "\2\0\3\3\1\0\21\3\1\u015f\10\3\26\0\2\3"+
    "\2\0\3\3\1\0\3\3\1\u0160\26\3\26\0\2\3"+
    "\2\0\3\3\1\0\6\3\1\u0161\6\3\1\u0162\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\26\3\1\u0163\3\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\71\1\3"+
    "\1\u014d\23\3\26\0\2\3\2\0\3\3\1\0\22\3"+
    "\1\u0164\1\3\1\71\5\3\26\0\2\3\2\0\1\3"+
    "\1\u0165\1\3\1\0\32\3\26\0\2\3\2\0\3\3"+
    "\1\0\6\3\1\71\23\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u0166\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\2\3\1\u0167\27\3\26\0\2\3\2\0\3\3"+
    "\1\0\32\3\1\u0168\25\0\2\3\2\0\3\3\1\0"+
    "\1\u0169\31\3\26\0\2\3\2\0\3\3\1\0\4\3"+
    "\1\u016a\1\u016b\24\3\26\0\2\3\2\0\3\3\1\0"+
    "\11\3\1\u0140\20\3\26\0\2\3\2\0\3\3\1\0"+
    "\4\3\1\u016c\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\71\4\3\1\u016d\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\10\3\1\u016e\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\3\1\u016f\1\71\27\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u0170\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\12\3\1\u0171\17\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u0172\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\14\3\1\u0173\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\2\3\1\u0174\27\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u0175\7\3\1\u0176\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\u0177\25\3\26\0"+
    "\2\3\2\0\3\3\1\0\2\3\1\u0178\27\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\71\1\u0179\10\3"+
    "\1\u017a\7\3\26\0\2\3\2\0\3\3\1\0\13\3"+
    "\1\226\16\3\26\0\2\3\2\0\3\3\1\0\12\3"+
    "\1\u017b\2\3\1\u017c\14\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u017d\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\2\3\1\u017e\27\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u017f\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\71\4\3\1\u0180\20\3\26\0\2\3"+
    "\2\0\3\3\1\0\13\3\1\u0181\16\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\71\24\3\26\0\2\3"+
    "\2\0\3\3\1\0\4\3\1\u0182\3\3\1\u0183\1\u0184"+
    "\11\3\1\u0185\6\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\u0186\26\3\26\0\2\3\2\0\3\3\1\0"+
    "\4\3\1\u0187\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\12\3\1\u0188\17\3\26\0\2\3\2\0\3\3\1\0"+
    "\10\3\1\u0189\21\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\273\6\3\1\u018a\1\3\1\u0149\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u018b\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\3\3\1\u018c\26\3\26\0\2\3"+
    "\2\0\3\3\1\0\14\3\1\215\15\3\26\0\2\3"+
    "\2\0\3\3\1\0\4\3\1\u018d\25\3\26\0\2\3"+
    "\2\0\3\3\1\0\10\3\1\u018e\21\3\26\0\2\3"+
    "\2\0\3\3\1\0\3\3\1\u018f\26\3\26\0\2\3"+
    "\2\0\3\3\1\0\11\3\1\72\20\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\u0190\27\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u0191\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\2\71\4\3\1\u0192\20\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\u0193\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u0154\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\10\3\1\u017d\21\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\u0194\2\3\1\u0195\21\3"+
    "\26\0\2\3\2\0\3\3\1\0\5\3\1\u0196\24\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\u0197\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\u0198\27\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\u0199\7\3"+
    "\1\u019a\17\3\26\0\2\3\2\0\3\3\1\0\5\3"+
    "\1\u019b\24\3\26\0\2\3\2\0\3\3\1\0\3\3"+
    "\1\u019c\2\3\1\u019d\1\3\1\u019e\14\3\1\u019f\4\3"+
    "\26\0\2\3\2\0\3\3\1\0\6\3\1\226\23\3"+
    "\26\0\2\3\2\0\3\3\1\0\21\3\1\u01a0\2\3"+
    "\1\u01a1\5\3\26\0\2\3\2\0\1\3\1\u01a2\1\3"+
    "\1\0\14\3\1\330\15\3\26\0\2\3\2\0\3\3"+
    "\1\0\6\3\1\u01a3\23\3\26\0\2\3\2\0\3\3"+
    "\1\0\15\3\1\224\14\3\26\0\2\3\2\0\3\3"+
    "\1\0\22\3\1\72\7\3\26\0\2\3\2\0\3\3"+
    "\1\0\6\3\1\100\23\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\u013c\31\3\26\0\2\3\2\0\3\3\1\0"+
    "\15\3\1\u0115\14\3\26\0\2\3\2\0\3\3\1\0"+
    "\1\3\1\u01a4\30\3\26\0\2\3\2\0\3\3\1\0"+
    "\4\3\1\u01a5\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\4\3\1\363\14\3\1\u0124\10\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u01a6\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\u01a7\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\10\3\1\u01a8\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u01a9\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u01aa\10\3\1\u01ab\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\u01ac\7\3\1\71"+
    "\15\3\26\0\2\3\2\0\3\3\1\0\4\3\1\u01ad"+
    "\25\3\26\0\2\3\2\0\3\3\1\0\2\3\1\u01ae"+
    "\27\3\26\0\2\3\2\0\3\3\1\0\3\3\1\u01af"+
    "\26\3\26\0\2\3\2\0\3\3\1\0\12\3\1\226"+
    "\17\3\26\0\2\3\2\0\3\3\1\0\2\3\1\u01b0"+
    "\27\3\26\0\2\3\2\0\3\3\1\0\4\3\1\u01b1"+
    "\25\3\26\0\2\3\2\0\3\3\1\0\20\3\1\u0139"+
    "\11\3\26\0\2\3\2\0\3\3\1\0\23\3\1\u01b2"+
    "\6\3\26\0\2\3\2\0\3\3\1\0\1\u012b\31\3"+
    "\26\0\2\3\2\0\3\3\1\0\23\3\1\123\6\3"+
    "\26\0\2\3\2\0\3\3\1\0\20\3\1\71\11\3"+
    "\26\0\2\3\2\0\3\3\1\0\13\3\1\71\16\3"+
    "\26\0\2\3\2\0\3\3\1\0\26\3\1\u01b3\3\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\71\27\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\u01b4\26\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\316\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\u01b5\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\10\3\1\u01b6\1\u01b7"+
    "\7\3\1\u0156\10\3\26\0\2\3\2\0\3\3\1\0"+
    "\11\3\1\u01b8\20\3\26\0\2\3\2\0\3\3\1\0"+
    "\6\3\1\226\5\3\1\363\7\3\1\u01b9\1\u01ba\4\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\u01bb\27\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\75\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\14\3\1\226\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\17\3\1\316\12\3"+
    "\26\0\2\3\2\0\3\3\1\0\12\3\1\304\17\3"+
    "\26\0\2\3\2\0\3\3\1\0\14\3\1\71\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\u01bc\26\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\u01bd\26\3"+
    "\26\0\2\3\2\0\3\3\1\0\5\3\1\72\1\u01be"+
    "\23\3\26\0\2\3\2\0\3\3\1\0\11\3\1\u012c"+
    "\20\3\26\0\2\3\2\0\3\3\1\0\12\3\1\132"+
    "\17\3\26\0\2\3\2\0\3\3\1\0\12\3\1\u0154"+
    "\17\3\26\0\2\3\2\0\3\3\1\0\12\3\1\u01bf"+
    "\17\3\26\0\2\3\2\0\3\3\1\0\7\3\1\u0117"+
    "\1\3\1\137\20\3\26\0\2\3\2\0\3\3\1\0"+
    "\23\3\1\71\6\3\26\0\2\3\2\0\3\3\1\0"+
    "\1\226\31\3\26\0\2\3\2\0\3\3\1\0\4\3"+
    "\1\u01c0\25\3\26\0\2\3\2\0\3\3\1\0\24\3"+
    "\1\71\5\3\26\0\2\3\2\0\3\3\1\0\11\3"+
    "\1\75\20\3\26\0\2\3\2\0\3\3\1\0\3\3"+
    "\1\u01c1\1\u01c2\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\6\3\1\315\23\3\26\0\2\3\2\0\3\3\1\0"+
    "\2\3\1\u01c3\1\3\1\71\25\3\26\0\2\3\4\0"+
    "\1\u014b\54\0\1\u01c4\4\0\2\u014b\4\0\1\u01c5\61\0"+
    "\1\u01c5\3\0\3\3\1\0\11\3\1\u0105\20\3\26\0"+
    "\2\3\2\0\3\3\1\0\5\3\1\75\24\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\330\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u01c6\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\2\3\1\u01a0\27\3\26\0"+
    "\2\3\2\0\3\3\1\0\17\3\1\u01c7\12\3\26\0"+
    "\2\3\2\0\3\3\1\0\2\3\1\u01c8\27\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\72\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\5\3\1\u01c9\24\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u01ca\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\24\3\1\316\5\3\26\0\2\3"+
    "\2\0\3\3\1\0\12\3\1\u01cb\17\3\26\0\2\3"+
    "\2\0\3\3\1\0\6\3\1\u01cc\23\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\u01cd\7\3\1\u01ce\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\14\3\1\u01cf\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\12\3\1\u01d0\17\3"+
    "\26\0\2\3\2\0\3\3\1\0\6\3\1\u013a\23\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\u01d1\25\3"+
    "\26\0\2\3\2\0\3\3\1\0\14\3\1\u01d2\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\10\3\1\u01d3\21\3"+
    "\26\0\2\3\2\0\3\3\1\0\10\3\1\u01d4\21\3"+
    "\26\0\2\3\2\0\3\3\1\0\2\3\1\u0117\27\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\u01d5\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\22\3\1\271\7\3"+
    "\26\0\2\3\2\0\3\3\1\0\12\3\1\316\17\3"+
    "\26\0\2\3\2\0\3\3\1\0\10\3\1\u01d6\5\3"+
    "\1\u01d7\13\3\26\0\2\3\2\0\3\3\1\0\25\3"+
    "\1\u012e\4\3\26\0\2\3\12\0\1\u01d8\57\0\3\3"+
    "\1\0\21\3\1\72\10\3\26\0\2\3\2\0\3\3"+
    "\1\0\5\3\1\u01d9\24\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\u0187\31\3\26\0\2\3\2\0\3\3\1\0"+
    "\21\3\1\u01da\10\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\u017d\26\3\26\0\2\3\2\0\3\3\1\0"+
    "\4\3\1\u0182\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\u01db\26\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\u01dc\26\3\26\0\2\3\2\0\3\3\1\0"+
    "\5\3\1\330\24\3\26\0\2\3\2\0\3\3\1\0"+
    "\5\3\1\u01dd\6\3\1\u01ca\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u01de\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u01df\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\226\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\20\3\1\72\11\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\u01e0\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\17\3\1\u01e1\12\3\26\0\2\3\2\0"+
    "\3\3\1\0\14\3\1\u01e2\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\12\3\1\u01e3\17\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\316\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\14\3\1\u01d9\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\10\3\1\71\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u01e4\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\u01bb\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\2\3\1\u01e5\27\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u01e6\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\u01e7\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u0105\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\71\13\3\1\u01e8\15\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u01e9\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u01ea\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\11\3\1\226\20\3\26\0\2\3\2\0"+
    "\3\3\1\0\10\3\1\271\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u01eb\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u01ec\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u01ed\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u01ee\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\24\3\1\u01ef\5\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u01f0\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\3\1\u01a3\30\3\26\0\2\3\2\0"+
    "\3\3\1\0\2\3\1\u01f1\27\3\26\0\2\3\2\0"+
    "\3\3\1\0\2\3\1\u01f2\27\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\u01f3\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\3\3\1\u01f4\26\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u01f5\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\14\3\1\363\15\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\u01f6\25\3\1\u01b3\3\3\26\0\2\3\2\0"+
    "\3\3\1\0\20\3\1\u01f7\11\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u01f8\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\u01f9\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\24\3\1\330\5\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u01fa\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\1\u01fb\14\3\1\u01fc\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u01fd\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u01fe\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u0175\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\226\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\12\3\1\72\17\3\26\0\2\3\2\0"+
    "\3\3\1\0\14\3\1\u01ff\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\2\3\1\u0200\27\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u0201\26\3\26\0\2\3\2\0"+
    "\1\3\1\u0202\1\3\1\0\1\3\1\u0203\3\3\1\u0204"+
    "\22\3\1\u0205\1\3\26\0\2\3\2\0\3\3\1\0"+
    "\2\3\1\u0206\27\3\26\0\2\3\2\0\3\3\1\0"+
    "\4\3\1\u016d\25\3\26\0\2\3\2\0\3\3\1\0"+
    "\3\3\1\u0207\26\3\26\0\2\3\2\0\3\3\1\0"+
    "\30\3\1\71\1\3\26\0\2\3\2\0\3\3\1\0"+
    "\11\3\1\u0208\20\3\26\0\2\3\2\0\3\3\1\0"+
    "\5\3\1\u0209\14\3\1\271\7\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\226\1\u020a\23\3\26\0\2\3"+
    "\2\0\3\3\1\0\12\3\1\u01e8\17\3\26\0\2\3"+
    "\2\0\3\3\1\0\15\3\1\u020b\14\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u020c\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\3\1\u020d\30\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\120\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\2\3\1\u020e\27\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\316\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u010e\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u020f\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u0210\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u0211\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\u0212\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\15\3\1\u0213\14\3\26\0\2\3\2\0\3\3"+
    "\1\0\15\3\1\311\14\3\26\0\2\3\2\0\3\3"+
    "\1\0\27\3\1\u0195\2\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u016f\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u0214\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\u0215\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\3\3\1\u0216\26\3\26\0\2\3\2\0\3\3"+
    "\1\0\5\3\1\217\24\3\26\0\2\3\2\0\3\3"+
    "\1\0\15\3\1\u0217\14\3\26\0\2\3\2\0\3\3"+
    "\1\0\27\3\1\u0218\2\3\26\0\2\3\4\0\1\u01c5"+
    "\61\0\2\u01c5\2\0\3\3\1\0\5\3\1\u0219\24\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\123\31\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u021a\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\5\3\1\72\24\3\26\0"+
    "\2\3\2\0\3\3\1\0\2\3\1\226\27\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u01ea\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u021b\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\u0187\23\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\u021c\23\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u0113\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\10\3\1\u021d\21\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\u01b9\24\3\26\0\2\3"+
    "\2\0\3\3\1\0\15\3\1\154\14\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u0147\1\3\1\u0199\27\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u021e\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\u021f\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u0220\15\3\26\0"+
    "\2\3\36\0\1\u0221\33\0\3\3\1\0\6\3\1\316"+
    "\23\3\26\0\2\3\2\0\3\3\1\0\3\3\1\u0222"+
    "\26\3\26\0\2\3\2\0\3\3\1\0\4\3\1\136"+
    "\25\3\26\0\2\3\2\0\3\3\1\0\15\3\1\144"+
    "\14\3\26\0\2\3\2\0\3\3\1\0\15\3\1\u0187"+
    "\14\3\26\0\2\3\2\0\3\3\1\0\27\3\1\u0223"+
    "\2\3\26\0\2\3\2\0\3\3\1\0\11\3\1\u0224"+
    "\20\3\26\0\2\3\2\0\3\3\1\0\4\3\1\u0225"+
    "\25\3\26\0\2\3\2\0\3\3\1\0\1\u01e6\31\3"+
    "\26\0\2\3\2\0\3\3\1\0\12\3\1\u010e\17\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u0226\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\27\3\1\71\2\3"+
    "\26\0\2\3\2\0\3\3\1\0\12\3\1\u0104\17\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\u012b\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\5\3\1\u0195\24\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\3\1\72\30\3"+
    "\26\0\2\3\2\0\3\3\1\0\5\3\1\u0227\24\3"+
    "\26\0\2\3\2\0\3\3\1\0\10\3\1\u0228\21\3"+
    "\26\0\2\3\2\0\3\3\1\0\14\3\1\u0229\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u022a\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\3\3\1\u022b\26\3"+
    "\26\0\2\3\2\0\3\3\1\0\24\3\1\u022c\5\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\71\31\3\26\0"+
    "\2\3\2\0\3\3\1\0\5\3\1\u0117\24\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u010e\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\100\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\3\1\u022d\30\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\u022e\25\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\u022f\23\3\26\0"+
    "\2\3\2\0\3\3\1\0\11\3\1\u0230\20\3\26\0"+
    "\2\3\2\0\3\3\1\0\21\3\1\u0231\10\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\u0100\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\u0232\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\u0233\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u0234\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\u01a2\23\3\26\0"+
    "\2\3\2\0\3\3\1\0\11\3\1\u01da\20\3\26\0"+
    "\2\3\2\0\3\3\1\0\5\3\1\u0235\24\3\26\0"+
    "\2\3\2\0\3\3\1\0\23\3\1\330\6\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u01e6\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\12\3\1\u0236\17\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u0237\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\14\3\1\u0238\15\3\26\0\2\3"+
    "\2\0\3\3\1\0\24\3\1\u012e\5\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u0239\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u023a\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\u023b\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\10\3\1\366\14\3\1\316\4\3\26\0\2\3"+
    "\2\0\3\3\1\0\10\3\1\u023c\21\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u023d\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\273\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u0105\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u023e\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\144\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\10\3\1\273\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\3\1\u023f\30\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\214\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\2\3\1\u0240\27\3\26\0\2\3\2\0"+
    "\3\3\1\0\25\3\1\271\4\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u0241\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\22\3\1\330\7\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\u0242\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\15\3\1\u0243\14\3\26\0\2\3\2\0\3\3"+
    "\1\0\17\3\1\72\1\3\1\u023b\10\3\26\0\2\3"+
    "\2\0\3\3\1\0\17\3\1\u0244\12\3\26\0\2\3"+
    "\2\0\3\3\1\0\6\3\1\366\23\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u0245\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u0246\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\104\31\3\26\0\2\3\2\0\3\3"+
    "\1\0\6\3\1\u0247\23\3\26\0\2\3\12\0\1\u0248"+
    "\57\0\3\3\1\0\15\3\1\u0249\14\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\75\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u024a\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\3\1\u024b\30\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u0117\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u024c\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\6\3\1\u024d\23\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\u024e\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u024f\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\26\3\1\u0250\3\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u0251\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\5\3\1\u0252\24\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u0253\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u0254\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\14\3\1\u01f1\15\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\71\10\3\1\u014f\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\21\3\1\u0255\10\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\u0256\23\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u0257\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\4\3\1\u0212\25\3\26\0\2\3"+
    "\2\0\3\3\1\0\3\3\1\u0258\26\3\26\0\2\3"+
    "\2\0\3\3\1\0\23\3\1\u0259\6\3\26\0\2\3"+
    "\2\0\3\3\1\0\21\3\1\u017d\10\3\26\0\2\3"+
    "\2\0\3\3\1\0\3\3\1\u025a\26\3\26\0\2\3"+
    "\2\0\3\3\1\0\3\3\1\u0195\26\3\26\0\2\3"+
    "\2\0\3\3\1\0\15\3\1\u0170\14\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\u025b\27\3\26\0\2\3"+
    "\2\0\3\3\1\0\6\3\1\u025c\23\3\26\0\2\3"+
    "\2\0\3\3\1\0\12\3\1\u01ca\17\3\26\0\2\3"+
    "\2\0\3\3\1\0\4\3\1\u025d\25\3\26\0\2\3"+
    "\2\0\3\3\1\0\30\3\1\u025e\1\3\26\0\2\3"+
    "\2\0\3\3\1\0\11\3\1\u023b\20\3\26\0\2\3"+
    "\2\0\3\3\1\0\16\3\1\u0224\13\3\26\0\2\3"+
    "\2\0\3\3\1\0\12\3\1\u025f\17\3\26\0\2\3"+
    "\2\0\3\3\1\0\24\3\1\u0260\5\3\26\0\2\3"+
    "\2\0\3\3\1\0\25\3\1\u019f\4\3\26\0\2\3"+
    "\2\0\3\3\1\0\4\3\1\u0261\25\3\26\0\2\3"+
    "\17\0\1\u0262\52\0\3\3\1\0\22\3\1\u023f\7\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\356\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\u0263\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u0264\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\7\3\1\u0265\22\3"+
    "\26\0\2\3\2\0\3\3\1\0\11\3\1\u0266\20\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\315\25\3"+
    "\26\0\2\3\2\0\3\3\1\0\26\3\1\u0267\3\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\u0268\25\3"+
    "\26\0\2\3\2\0\3\3\1\0\14\3\1\u0269\15\3"+
    "\26\0\2\3\2\0\3\3\1\0\10\3\1\u026a\21\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u026b\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\u026c\31\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\u026d\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\7\3\1\u026e\22\3\26\0"+
    "\2\3\2\0\3\3\1\0\22\3\1\212\7\3\26\0"+
    "\2\3\2\0\3\3\1\0\22\3\1\356\7\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\u026a\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\u0252\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\21\3\1\132\10\3\26\0"+
    "\2\3\2\0\3\3\1\0\26\3\1\u026f\3\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u012e\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\11\3\1\u017d\20\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u0270\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\10\3\1\u0271\7\3\1\u0272\11\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\3\1\u0105\1\3"+
    "\1\u0273\6\3\1\u0188\17\3\26\0\2\3\2\0\3\3"+
    "\1\0\5\3\1\u012d\24\3\26\0\2\3\2\0\3\3"+
    "\1\0\6\3\1\312\23\3\26\0\2\3\2\0\3\3"+
    "\1\0\3\3\1\u0274\26\3\26\0\2\3\2\0\3\3"+
    "\1\0\6\3\1\u0275\23\3\26\0\2\3\2\0\3\3"+
    "\1\0\10\3\1\u0276\21\3\26\0\2\3\2\0\3\3"+
    "\1\0\4\3\1\226\25\3\26\0\2\3\2\0\3\3"+
    "\1\0\11\3\1\u0263\14\3\1\u0277\3\3\26\0\2\3"+
    "\2\0\3\3\1\0\13\3\1\u0278\10\3\1\u0279\5\3"+
    "\26\0\2\3\2\0\3\3\1\0\12\3\1\u027a\17\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u027b\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\4\3\1\u027c\25\3"+
    "\26\0\2\3\2\0\3\3\1\0\15\3\1\u027d\14\3"+
    "\26\0\2\3\2\0\3\3\1\0\1\305\31\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\u0215\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u027e\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u027f\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\14\3\1\u0280\15\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u0281\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\3\1\u01a1\30\3\26\0"+
    "\2\3\2\0\3\3\1\0\24\3\1\u0282\5\3\26\0"+
    "\2\3\2\0\3\3\1\0\7\3\1\u0283\22\3\26\0"+
    "\2\3\2\0\3\3\1\0\24\3\1\u0284\5\3\26\0"+
    "\2\3\2\0\3\3\1\0\12\3\1\u0285\17\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\u0286\23\3\26\0"+
    "\2\3\2\0\3\3\1\0\12\3\1\363\17\3\26\0"+
    "\2\3\2\0\3\3\1\0\6\3\1\u01a0\23\3\26\0"+
    "\2\3\2\0\3\3\1\0\15\3\1\u0287\14\3\26\0"+
    "\2\3\2\0\3\3\1\0\21\3\1\u0288\10\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\u0289\25\3\26\0"+
    "\2\3\2\0\3\3\1\0\5\3\1\u0100\24\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\u019f\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\2\3\1\u028a\27\3\26\0"+
    "\2\3\2\0\3\3\1\0\13\3\1\u028b\16\3\26\0"+
    "\2\3\2\0\3\3\1\0\10\3\1\u01d6\21\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u028c\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\u028d\24\3\26\0\2\3"+
    "\2\0\3\3\1\0\5\3\1\u028e\24\3\26\0\2\3"+
    "\2\0\3\3\1\0\1\u028f\31\3\26\0\2\3\2\0"+
    "\3\3\1\0\15\3\1\u0290\14\3\26\0\2\3\2\0"+
    "\3\3\1\0\10\3\1\u0291\21\3\26\0\2\3\2\0"+
    "\3\3\1\0\3\3\1\u0292\26\3\26\0\2\3\2\0"+
    "\3\3\1\0\4\3\1\u0293\25\3\26\0\2\3\2\0"+
    "\3\3\1\0\7\3\1\u0294\22\3\26\0\2\3\2\0"+
    "\3\3\1\0\1\3\1\u0295\1\3\1\u0274\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\4\3\1\u0296\25\3\26\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\u0297\26\3\26\0"+
    "\2\3\2\0\3\3\1\0\1\u0298\31\3\26\0\2\3"+
    "\2\0\3\3\1\0\15\3\1\u0299\14\3\26\0\2\3"+
    "\2\0\3\3\1\0\2\3\1\u029a\27\3\26\0\2\3"+
    "\2\0\3\3\1\0\10\3\1\u0293\21\3\26\0\2\3"+
    "\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[35224];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\34\1\1\11\2\1\3\11\5\1\2\11"+
    "\1\1\1\11\1\1\1\11\1\1\2\11\171\1\7\11"+
    "\1\0\3\11\1\0\223\1\2\0\33\1\1\0\133\1"+
    "\1\11\23\1\1\0\110\1\1\0\46\1\1\0\31\1"+
    "\1\11\70\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[666];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 152) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 2: 
          { lexeme=yytext(); return Identificador;
          }
        case 40: break;
        case 37: 
          { return Parentesis;
          }
        case 41: break;
        case 19: 
          { return CorcheteCerrado;
          }
        case 42: break;
        case 5: 
          { return Guionbajo;
          }
        case 43: break;
        case 14: 
          { return SignoExclamacion;
          }
        case 44: break;
        case 22: 
          { return LlaveAbierta;
          }
        case 45: break;
        case 12: 
          { return Menor;
          }
        case 46: break;
        case 20: 
          { return ParentesisAbierto;
          }
        case 47: break;
        case 27: 
          { lexeme=yytext(); return String;
          }
        case 48: break;
        case 39: 
          { return DobleNumeral;
          }
        case 49: break;
        case 23: 
          { return LlaveCerrada;
          }
        case 50: break;
        case 21: 
          { return ParentesisCerrado;
          }
        case 51: break;
        case 35: 
          { return or;
          }
        case 52: break;
        case 15: 
          { return y;
          }
        case 53: break;
        case 16: 
          { return PuntoyComa;
          }
        case 54: break;
        case 24: 
          { return Arroba;
          }
        case 55: break;
        case 29: 
          { lexeme=yytext(); return Reservadas;
          }
        case 56: break;
        case 3: 
          { lexeme=yytext(); return Numero;
          }
        case 57: break;
        case 30: 
          { return IgualIgual;
          }
        case 58: break;
        case 34: 
          { return and;
          }
        case 59: break;
        case 36: 
          { return Corchetes;
          }
        case 60: break;
        case 38: 
          { return Llaves;
          }
        case 61: break;
        case 9: 
          { return Suma;
          }
        case 62: break;
        case 11: 
          { return Porcentaje;
          }
        case 63: break;
        case 26: 
          { lexeme=yytext(); return Bit;
          }
        case 64: break;
        case 17: 
          { return Punto;
          }
        case 65: break;
        case 6: 
          { return Resta;
          }
        case 66: break;
        case 13: 
          { return Mayor;
          }
        case 67: break;
        case 25: 
          { return Numeral;
          }
        case 68: break;
        case 32: 
          { return MayorIgual;
          }
        case 69: break;
        case 33: 
          { return NoIgual;
          }
        case 70: break;
        case 1: 
          { return ERROR;
          }
        case 71: break;
        case 28: 
          { lexeme=yytext(); return Float;
          }
        case 72: break;
        case 10: 
          { return Multiplicacion;
          }
        case 73: break;
        case 4: 
          { /*Ignore*/
          }
        case 74: break;
        case 31: 
          { return MenorIgual;
          }
        case 75: break;
        case 18: 
          { return CorcheteAbierto;
          }
        case 76: break;
        case 8: 
          { return Igual;
          }
        case 77: break;
        case 7: 
          { return Division;
          }
        case 78: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
